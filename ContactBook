class ContactBook:
    def __init__(self):
        self.contacts = []
    def add_contact(self, name, phone, email, address):
        self.contacts.append({
            "name": name,
            "phone": phone,
            "email": email,
            "address": address
        })
        print(f"Contact '{name}' added successfully.")
    def view_contacts(self):
        if not self.contacts:
            print("No contacts available.")
            return
        print("\nContact List:")
        for idx, contact in enumerate(self.contacts, 1):
            print(f"{idx}. Name: {contact['name']}, Phone: {contact['phone']}")
    def search_contact(self, query):
        results = [contact for contact in self.contacts if query.lower() in contact['name'].lower() or query in contact['phone']]
        if results:
            print("\nSearch Results:")
            for contact in results:
                print(f"Name: {contact['name']}, Phone: {contact['phone']}, Email: {contact['email']}, Address: {contact['address']}")
        else:
            print("No contact found.")
    def update_contact(self, query):
        for contact in self.contacts:
            if contact['name'].lower() == query.lower() or contact['phone'] == query:
                print("\nUpdating Contact:")
                print(f"Current Details: Name: {contact['name']}, Phone: {contact['phone']}, Email: {contact['email']}, Address: {contact['address']}")
                contact['name'] = input("Enter new name: ") or contact['name']
                contact['phone'] = input("Enter new phone: ") or contact['phone']
                contact['email'] = input("Enter new email: ") or contact['email']
                contact['address'] = input("Enter new address: ") or contact['address']
                print("Contact updated successfully.")
                return
        print("No contact found to update.")
    def delete_contact(self, query):
        for contact in self.contacts:
            if contact['name'].lower() == query.lower() or contact['phone'] == query:
                self.contacts.remove(contact)
                print(f"Contact '{contact['name']}' deleted successfully.")
                return
        print("No contact found to delete.")
    def user_interface(self):
        while True:
            print("\nContact Book")
            print("1. Add Contact")
            print("2. View Contact List")
            print("3. Search Contact")
            print("4. Update Contact")
            print("5. Delete Contact")
            print("6. Exit")
            choice = input("Choose an option: ")
            if choice == '1':
                name = input("Enter name: ")
                phone = input("Enter phone number: ")
                email = input("Enter email: ")
                address = input("Enter address: ")
                self.add_contact(name, phone, email, address)
            elif choice == '2':
                self.view_contacts()
            elif choice == '3':
                query = input("Enter name or phone to search: ")
                self.search_contact(query)
            elif choice == '4':
                query = input("Enter name or phone to update: ")
                self.update_contact(query)
            elif choice == '5':
                query = input("Enter name or phone to delete: ")
                self.delete_contact(query)
            elif choice == '6':
                print("Exiting Contact Book. Goodbye!")
                break
            else:
                print("Invalid option. Please try again.")
if __name__ == "__main__":
    contact_book = ContactBook()
    contact_book.user_interface()
